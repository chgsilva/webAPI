swagger: "2.0"
info:
  version: "0.0.1"
  title: Project 2 - WEB API
# during dev, should point to your local machine
host: localhost
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
x-a127-config: {}
x-a127-services: {}
paths:

  /:
      # binds a127 app logic to a route
    x-swagger-router-controller: root_handler
    x-a127-apply: {}
    get:
      description: Returns the parameters passed to the caller
      # used as the method name of the controller
      operationId: roothandler
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
########################################################
  /gets:
    # binds a127 app logic to a route
    x-swagger-router-controller: get_handler
    x-a127-apply: {}
    get:
      description: Returns the parameters passed to the caller
      # used as the method name of the controller
      operationId: gethandler
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
#######################################################    
  /posts:
    # binds a127 app logic to a route
    x-swagger-router-controller: post_handler
    x-a127-apply: {}
    post:
      description: Returns the parameters passed to the caller
      # used as the method name of the controller
      operationId: posthandler
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
####################################################
  /puts:
    # binds a127 app logic to a route
    x-swagger-router-controller: put_handler
    x-a127-apply: {}
    put:
      description: Returns the parameters passed to the caller
      # used as the method name of the controller
      operationId: puthandler
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

####################################################
  /deletes:
    # binds a127 app logic to a route
    x-swagger-router-controller: delete_handler
    x-a127-apply: {}
    delete:
      description: Returns the parameters passed to the caller
      # used as the method name of the controller
      operationId: deletehandler
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
